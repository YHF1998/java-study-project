<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--最简单的模式-->
    <bean id="studentOne" class="org.example.spring.pojo.Student"/>

    <!--依赖注入-->
    <bean id="studentTwo" class="org.example.spring.pojo.Student">
        <property name="sid" value="12"/>
        <property name="age" value="12"/>
        <property name="sname" value="小明"/>
        <property name="gender" value="男"/>
    </bean>

    <!--有参构造，直接注入-->
    <bean id="studentThree" class="org.example.spring.pojo.Student">
        <!--如果是按顺序写，甚至不需要声明name属性-->
        <constructor-arg name="sid" value="12"/>
        <constructor-arg name="sname" value="小菜"/>
        <constructor-arg name="age" value="18"/>
        <constructor-arg name="gender" value="女"/>
    </bean>

    <!--设置空值/空对象 也就是null-->
    <bean id="studentFour" class="org.example.spring.pojo.Student">
        <property name="sid" value="12"/>
        <property name="age" value="12"/>
        <property name="sname" value="小明"/>
        <!--错误null的设置方式，这种是一个字符串-->
        <!--<property name="gender" value="null"/>-->
        <!--正确方式-->
        <property name="gender" >
            <null/>
        </property>
    </bean>

    <bean id="studentFive" class="org.example.spring.pojo.Student">
        <property name="sid" value="12"/>
        <property name="age" value="12"/>
        <!--处理带有特殊字符的内容，需要使用CDATA 进行包裹-->
        <!--需要注意的是，使用value标签包裹的话，在标签内进行回车，也是会当成字符进行传递的-->
        <property name="sname" >
        <!--
            <：&lt;
            >：&gt;
            CDATA节其中的内容会原样解析<![CDATA[...]]>
            CDATA节是xml中一个特殊的标签，因此不能写在一个属性中
        -->

            <value><![CDATA[<小明>]]></value>
        </property>
        <property name="gender" value="男"/>
    </bean>
</beans>